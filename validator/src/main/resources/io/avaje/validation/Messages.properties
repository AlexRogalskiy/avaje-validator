avaje.AssertFalse.message     = must be false
avaje.AssertTrue.message      = must be true
avaje.DecimalMax.message      = must be less than or equal to {value}
avaje.DecimalMax.exclusive.message      = must be less than {value}
avaje.DecimalMin.message      = must be greater than or equal to {value}
avaje.DecimalMin.exclusive.message      = must be greater than {value}
avaje.Digits.message          = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
avaje.Email.message           = must be a well-formed email address
avaje.Future.message          = must be a future date
avaje.FutureOrPresent.message = must be a date in the present or in the future
avaje.Max.message             = must be less than or equal to {value}
avaje.Min.message             = must be greater than or equal to {value}
avaje.Negative.message        = must be less than 0
avaje.NegativeOrZero.message  = must be less than or equal to 0
avaje.NotBlank.message        = must not be blank
avaje.NotEmpty.message        = must not be empty
avaje.NotNull.message         = must not be null
avaje.Null.message            = must be null
avaje.Past.message            = must be a past date
avaje.PastOrPresent.message   = must be a date in the past or in the present
avaje.Pattern.message         = must match "{regexp}"
avaje.Positive.message        = must be greater than 0
avaje.PositiveOrZero.message  = must be greater than or equal to 0
avaje.Size.message            = size must be between {min} and {max}

avaje.ext.CreditCardNumber.message        = invalid credit card number
avaje.ext.Currency.message                = invalid currency (must be one of {value})
avaje.ext.EAN.message                     = invalid {type} barcode
avaje.ext.ISBN.message                    = invalid ISBN
avaje.Length.message                  = length must be between {min} and {max}
avaje.ext.CodePointLength.message         = length must be between {min} and {max}
avaje.ext.LuhnCheck.message               = the check digit for {validatedValue} is invalid, Luhn Modulo 10 checksum failed
avaje.ext.Mod10Check.message              = the check digit for {validatedValue} is invalid, Modulo 10 checksum failed
avaje.ext.Mod11Check.message              = the check digit for {validatedValue} is invalid, Modulo 11 checksum failed
avaje.ext.ModCheck.message                = the check digit for {validatedValue} is invalid, {modType} checksum failed
avaje.ext.Normalized.message              = must be normalized
avaje.Range.message                   = must be between {min} and {max}
avaje.ext.UniqueElements.message          = must only contain unique elements
avaje.ext.URL.message                     = must be a valid URL
avaje.ext.UUID.message                    = must be a valid UUID

avaje.ext.time.DurationMax.message        = must be shorter than${inclusive == true ? ' or equal to' : ''}${days == 0 ? '' : days == 1 ? ' 1 day' : ' ' += days += ' days'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' minutes'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' seconds'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' millis'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}
avaje.ext.time.DurationMin.message        = must be longer than${inclusive == true ? ' or equal to' : ''}${days == 0 ? '' : days == 1 ? ' 1 day' : ' ' += days += ' days'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' minutes'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' seconds'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' millis'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}
